{"config":{"indexing":"full","lang":["en"],"min_search_length":3,"prebuild_index":false,"separator":"[\\s\\-]+"},"docs":[{"location":"","text":"Welcome to the Docs-as-Code workshop","title":"Introduction"},{"location":"#welcome-to-the-docs-as-code-workshop","text":"","title":"Welcome to the Docs-as-Code workshop"},{"location":"workshop/","text":"What is this? This guide accompanies a workshop to learn how to use docs as code. Learning outcomes You'll learn GitHub using GitHub Desktop. Simple markdown How to create a local static help website using MKDOCS. How to contribute to a docs as code project. Prerequisites Before starting this guide, please make sure you have the following. GitHub access to this repo . GitHub Desktop Python 3 and pip3 . Follow these instructions to check if Python is already installed on your computer. By default, some Apple computers have this pre-installed. Text editor of your choice. We recommend Atom . Tasks 1. Sign In to GitHub Desktop Open GitHub Desktop on your computer. Click GitHub Desktop followed by Preferences . In the Accounts tab, click Sign in . Enter you your GitHub credentials and follow the instructions to verify your account. 2. Clone the test repo Using you browser open the GitHub repo . Click Clone or download . Copy the HTTPS url. Using GitHub Desktop, select Clone a Repository from the Internet . Click the URL tab and paste the repo HTTPS url into URL or username/repository . Click Clone . 3. Make changes Using your file explorer (Finder for Mac or Explorer for Windows), navigate to the people directory of the cloned repo. For example. your-local-folder\\DLC\\docs\\people !!! note \"note\" If you don't know where your repo was cloned to on your computer, use GitHub Desktop to open it. Using GitHub Desktop, click Repository and Open in Finder (or Open in Explorer for Windows). Open the markdown file with your name using your text editor. Make some changes for demonstration and save the file. 4. Test locally We recommend that you test you documentation on you local computer before merging with the main project. This reduces the chance that something you do will break the main document. To setup your local test environment, follow these steps. Using your terminal or command prompt, navigate to your repo location. Install the dependencies using this command $ pip3 install -r requirements.txt . Run the site locally using this command $ mkdocs serve . Using your browser, paste this URL into the address bar localhost:8000 . Inspect your content to make sure it works as expected. For future testing, only steps 3 - 5 are necessary. 5. Commit Using GitHub Desktop, under Changes , add a summary and description to describe the changes you have made. Create a new branch by clicking Current branch and New Branch . Name your new branch with a descriptive name and click Create Branch . Click Bring changes to 'your branch name' and Switch branch . Click Commit to 'your branch name' . Click Publish branch . 6. Create PR Before you merge your content with the project you must create a Pull Request (PR). Open the GitHub repo in your browser . Click New pull request . On 'compare:', select your branch. Click Create pull request . 7. Merge Depending on your workflow, you can add reviewers to your PR to validate your work. Following review, click Merge pull request and Confirm merge to combine your branch to the master branch. Finally Your document changes are merged. These files will be automatically built and published. This can take a little time so be patient. To check the build, follow this link .","title":"Workshop"},{"location":"workshop/#what-is-this","text":"This guide accompanies a workshop to learn how to use docs as code.","title":"What is this?"},{"location":"workshop/#learning-outcomes","text":"You'll learn GitHub using GitHub Desktop. Simple markdown How to create a local static help website using MKDOCS. How to contribute to a docs as code project.","title":"Learning outcomes"},{"location":"workshop/#prerequisites","text":"Before starting this guide, please make sure you have the following. GitHub access to this repo . GitHub Desktop Python 3 and pip3 . Follow these instructions to check if Python is already installed on your computer. By default, some Apple computers have this pre-installed. Text editor of your choice. We recommend Atom .","title":"Prerequisites"},{"location":"workshop/#tasks","text":"","title":"Tasks"},{"location":"workshop/#1-sign-in-to-github-desktop","text":"Open GitHub Desktop on your computer. Click GitHub Desktop followed by Preferences . In the Accounts tab, click Sign in . Enter you your GitHub credentials and follow the instructions to verify your account.","title":"1. Sign In to GitHub Desktop"},{"location":"workshop/#2-clone-the-test-repo","text":"Using you browser open the GitHub repo . Click Clone or download . Copy the HTTPS url. Using GitHub Desktop, select Clone a Repository from the Internet . Click the URL tab and paste the repo HTTPS url into URL or username/repository . Click Clone .","title":"2. Clone the test repo"},{"location":"workshop/#3-make-changes","text":"Using your file explorer (Finder for Mac or Explorer for Windows), navigate to the people directory of the cloned repo. For example. your-local-folder\\DLC\\docs\\people !!! note \"note\" If you don't know where your repo was cloned to on your computer, use GitHub Desktop to open it. Using GitHub Desktop, click Repository and Open in Finder (or Open in Explorer for Windows). Open the markdown file with your name using your text editor. Make some changes for demonstration and save the file.","title":"3. Make changes"},{"location":"workshop/#4-test-locally","text":"We recommend that you test you documentation on you local computer before merging with the main project. This reduces the chance that something you do will break the main document. To setup your local test environment, follow these steps. Using your terminal or command prompt, navigate to your repo location. Install the dependencies using this command $ pip3 install -r requirements.txt . Run the site locally using this command $ mkdocs serve . Using your browser, paste this URL into the address bar localhost:8000 . Inspect your content to make sure it works as expected. For future testing, only steps 3 - 5 are necessary.","title":"4. Test locally"},{"location":"workshop/#5-commit","text":"Using GitHub Desktop, under Changes , add a summary and description to describe the changes you have made. Create a new branch by clicking Current branch and New Branch . Name your new branch with a descriptive name and click Create Branch . Click Bring changes to 'your branch name' and Switch branch . Click Commit to 'your branch name' . Click Publish branch .","title":"5. Commit"},{"location":"workshop/#6-create-pr","text":"Before you merge your content with the project you must create a Pull Request (PR). Open the GitHub repo in your browser . Click New pull request . On 'compare:', select your branch. Click Create pull request .","title":"6. Create PR"},{"location":"workshop/#7-merge","text":"Depending on your workflow, you can add reviewers to your PR to validate your work. Following review, click Merge pull request and Confirm merge to combine your branch to the master branch.","title":"7. Merge"},{"location":"workshop/#finally","text":"Your document changes are merged. These files will be automatically built and published. This can take a little time so be patient. To check the build, follow this link .","title":"Finally"},{"location":"people/Alice/","text":"Title My name is Alice. This is my page.","title":"Alice"},{"location":"people/Alice/#title","text":"My name is Alice. This is my page.","title":"Title"},{"location":"people/Bob/","text":"Bob's Info I like cake! I really like cake","title":"Bob"},{"location":"people/Bob/#bobs-info","text":"I like cake! I really like cake","title":"Bob's Info"},{"location":"people/George/","text":"George Life hack to cope with social distancing Get hiking boots Find a mountain Hike the mountain","title":"George"},{"location":"people/George/#george","text":"","title":"George"},{"location":"people/George/#life-hack-to-cope-with-social-distancing","text":"Get hiking boots Find a mountain Hike the mountain","title":"Life hack to cope with social distancing"},{"location":"people/John/","text":"Title","title":"John"},{"location":"people/John/#title","text":"","title":"Title"},{"location":"people/Paul/","text":"Title","title":"Paul"},{"location":"people/Paul/#title","text":"","title":"Title"},{"location":"people/Ringo/","text":"Title","title":"Ringo"},{"location":"people/Ringo/#title","text":"","title":"Title"}]}